---
import BaseLayout, { type BaseLayoutProps } from "@/layouts/BaseLayout.astro";
import Section, { type SectionProps } from "@/components/Section.astro";
import IconPoint from "@/components/IconPoint.astro";

import { getCollection } from "astro:content";
import sortByLatest from "@/lib/sortByLatest";
import hashSlug from "@/lib/hashSlug";
import cdnify from "@/lib/cdnify";

import { MAX_SECTION_LENGTH } from "@/constants";
import cn from "@/lib/cn";

import PlanIcon from "@/components/icons/Plan.astro";
import ProjectIcon from "@/components/icons/Project.astro";
import PublicationIcon from "@/components/icons/Publication.astro";

const pageMetaData = {
    title: "Home",
    description:
        "Explore the Quirky Corners of Xenitane's Web Wonderland: Where Math Meets Technology, Programming is a Creative Journey. Join the Adventure of Problem-Solving and Sorcery of Code. From Artful Web Design to Niche Tech Delights, Amusing Discoveries are waiting for you.",
    keywords: ["portfolio", "xenitane", "mathematics", "programming", "coding", "software development"],
} satisfies BaseLayoutProps;

const plans: string[] = [
    "Mastering Vim",
    "Learning New Programming Languages",
    "Learning Yo-Yo Tricks",
    "Learning Violin",
    "Math for fun",
    "Writing a compiler",
    "Making server-side manga aggregator",
    "Making declarative music",
];

let [projects, publications] = await Promise.all([
    getCollection("project"),
    getCollection("publication", (p) => import.meta.env.DEV || !p.data.isDraft),
]);

projects = projects.sort(sortByLatest).slice(0, MAX_SECTION_LENGTH);
publications = publications.sort(sortByLatest).slice(0, MAX_SECTION_LENGTH);

const blocks: {
    meta: SectionProps;
    content: { text: string; link?: string }[];
    emptyText: string;
    Icon: (arg: Record<string, unknown>) => unknown;
}[] = [
    {
        meta: { sectionId: "plans", sectionName: "What I'm up-to these days & What I plan to do" },
        emptyText: "Looking for things to do, will update later&hellip;",
        content: plans.map((plan) => ({ text: plan })),
        Icon: PlanIcon,
    },
    {
        meta: { sectionId: "projects", sectionName: "My Recent Projects", link: "/project" },
        emptyText: "Working on stuff, will post here soon&hellip;",
        content: projects.map((project) => ({
            text: project.data.metaContent.title,
            link: `/project/${hashSlug(project.slug)}`,
        })),
        Icon: ProjectIcon,
    },
    {
        meta: { sectionId: "publications", sectionName: "Recent Blogs & Articles", link: "/pub" },
        emptyText: "Scribbling and Drafting some ideas, Keep your eyes open&hellip;",
        content: publications.map((publication) => ({
            text: publication.data.metaContent.title,
            link: `/pub/${hashSlug(publication.slug)}`,
        })),
        Icon: PublicationIcon,
    },
];
---

<BaseLayout {...pageMetaData}>
    <div class="flex items-center justify-center p-4 text-center">
        <h1 id="title" class="flex flex-col text-3xl font-bold">
            <span class={cn("flex flex-col", "md:inline")}>
                <span>Hey there!</span>
                <span>Internet Stranger,</span>
            </span>
            <span>Xenitane here.</span>
        </h1>
    </div>
    <div class="mx-auto flex flex-col gap-4 p-4">
        <div class={cn("flex w-full flex-col-reverse gap-4 lg:flex-row", "lg:items-center")}>
            <div class="flex flex-col gap-2">
                <h2 id="intro" class="text-2xl font-bold tracking-tight italic">Welcome to my Digital Oasis.</h2>
                <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                    This is where I showcase what I've made and what I'm up-to.
                </p>
                <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                    Thanks for stopping by and taking a look.
                </p>
                <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                    While you're here, take a breather and look around,
                    <br />
                    you might find something to your fancy.
                </p>
            </div>
            <div class={cn("ml-auto flex aspect-[4/3] items-center justify-center overflow-hidden rounded-xl", "lg:w-1/3")}>
                <img src={cdnify([true, "/index/xenitane-dp.jpg"])} alt="Cover image" class="center grayscale" />
            </div>
        </div>
        <div class="flex flex-col gap-2">
            <h2 id="about" class="text-2xl font-bold tracking-tight italic">About Me</h2>
            <blockquote
                class={cn(
                    "border-l-[6px] border-neutral-200 p-3 leading-5 text-neutral-700",
                    "dark:border-neutral-800 dark:text-neutral-300"
                )}
            >
                <p>Organized clutter, Bundle of thoughts</p>
                <p>Sorcerer of numbers, Wizard of code</p>
            </blockquote>
            <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                I like maths, solving problems, programming/coding to make stuff that sometime make someone smile.
            </p>
            <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                I love to collaborate to develop new skills and things and also contribute.
            </p>
            <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                Enthusiast for all things hardware, embedded, low-level, web.
            </p>
            <p class={cn("leading-5 text-neutral-800", "dark:text-neutral-200")}>
                Living in the terminal, arch/zsh/tmux/nvim + tools. Life's too short to program in <code
                    class={cn("rounded bg-[#8c8c8c1f] px-1 py-0.5", "dark:bg-[#6d6d6d33]")}>JAVA</code
                >.
            </p>
        </div>
    </div>
    {
        blocks.map((block) => {
            return (
                <Section {...block.meta}>
                    {0 === block.content.length ? (
                        <div
                            class={cn(
                                "flex w-full items-center justify-center rounded-lg bg-neutral-100/70 p-4 font-semibold italic",
                                "dark:bg-neutral-900/70"
                            )}
                            set:html={block.emptyText}
                        />
                    ) : (
                        <div class={cn("flex w-full rounded-lg bg-neutral-100/70", "dark:bg-neutral-900/70")}>
                            <ul class={cn("grid w-full gap-2 space-y-2 space-x-2 p-4", "md:grid-cols-2")}>
                                {block.content.map((content) => {
                                    return (
                                        <IconPoint {...content}>
                                            <block.Icon />
                                        </IconPoint>
                                    );
                                })}
                            </ul>
                        </div>
                    )}
                </Section>
            );
        })
    }
</BaseLayout>
